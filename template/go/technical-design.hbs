# Technical Design

> Guide for the implementation, including detailed design, priorities, coding conventions, and testing

Highlights:

{{#each model.technical-design.highlights}}
* {{this}}
{{/each}}

## Code structure

 - __cmd__: Entry points to the application (main packages)
 - __internal__: Private application and library code
 - __pkg__: Public libraries intended for use by external applications
 - __api__: Protobuf definitions or OpenAPI specs if applicable
 - __config__: Configuration files and helpers
 - __test__: Go unit and integration tests (uses Go's built-in `testing` package)
 - __scripts__: Tooling scripts (bash, makefiles, etc.)
 - __build__: Packaging and distribution assets
 - __.github__: GitHub Actions workflows
 - __.vscode__: Visual Studio Code settings and tasks

## Useful links

 - [Effective Go](https://go.dev/doc/effective_go)
 - [Go Code Review Comments](https://go.dev/wiki/CodeReviewComments)
{{#ifSatisfy "equals" model.implementation.tags "i18n"}}
 - [Internationalization](INTERNATIONALIZATION.md)
 {{/ifSatisfy}}
 {{#ifSatisfy "equals" model.implementation.tags "accessibility"}}
 - [Accessibility](ACCESSIBILITY.md)
 {{/ifSatisfy}}
{{#ifSatisfy "equals" model.implementation.tags "railway"}}
 - [Railway oriented programming](https://fsharpforfunandprofit.com/posts/recipe-part2/)
 {{/ifSatisfy}}
{{#each model.technical-design.links}}
- {{this}}
{{/each}}
